// Code generated - DO NOT EDIT.
// This file is a generated binding and any manual changes will be lost.

package bindings

import (
	"encoding/json"

	"github.com/ethereum-optimism/optimism/op-bindings/solc"
)

const DelayedVetoableStorageLayoutJSON = "{\"storage\":[{\"astId\":1000,\"contract\":\"src/L1/DelayedVetoable.sol:DelayedVetoable\",\"label\":\"TARGET\",\"offset\":0,\"slot\":\"0\",\"type\":\"t_address\"},{\"astId\":1001,\"contract\":\"src/L1/DelayedVetoable.sol:DelayedVetoable\",\"label\":\"_superchainConfig\",\"offset\":0,\"slot\":\"1\",\"type\":\"t_contract(SuperchainConfig)1004\"},{\"astId\":1002,\"contract\":\"src/L1/DelayedVetoable.sol:DelayedVetoable\",\"label\":\"_delay\",\"offset\":0,\"slot\":\"2\",\"type\":\"t_uint256\"},{\"astId\":1003,\"contract\":\"src/L1/DelayedVetoable.sol:DelayedVetoable\",\"label\":\"_queuedAt\",\"offset\":0,\"slot\":\"3\",\"type\":\"t_mapping(t_bytes32,t_uint256)\"}],\"types\":{\"t_address\":{\"encoding\":\"inplace\",\"label\":\"address\",\"numberOfBytes\":\"20\"},\"t_bytes32\":{\"encoding\":\"inplace\",\"label\":\"bytes32\",\"numberOfBytes\":\"32\"},\"t_contract(SuperchainConfig)1004\":{\"encoding\":\"inplace\",\"label\":\"contract SuperchainConfig\",\"numberOfBytes\":\"20\"},\"t_mapping(t_bytes32,t_uint256)\":{\"encoding\":\"mapping\",\"label\":\"mapping(bytes32 =\u003e uint256)\",\"numberOfBytes\":\"32\",\"key\":\"t_bytes32\",\"value\":\"t_uint256\"},\"t_uint256\":{\"encoding\":\"inplace\",\"label\":\"uint256\",\"numberOfBytes\":\"32\"}}}"

var DelayedVetoableStorageLayout = new(solc.StorageLayout)

var DelayedVetoableDeployedBin = "0x608060405234801561001057600080fd5b50600436106100885760003560e01c80636a42b8f81161005b5780636a42b8f81461012b578063b912de5d14610133578063d4b8399214610146578063d8bff4401461014e57610088565b80632750a0bc1461009257806335e80ab3146100ad57806354fd4d50146100da5780635c39fcc114610123575b610090610156565b005b61009a610477565b6040519081526020015b60405180910390f35b6100b5610496565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020016100a4565b6101166040518060400160405280600581526020017f312e302e3000000000000000000000000000000000000000000000000000000081525081565b6040516100a491906107af565b6100b56104ba565b61009a6104c9565b61009a610141366004610822565b6104d7565b6100b56104fe565b6100b5610522565b361580156101645750600254155b1561028357610171610531565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141580156101df57506101af6105c5565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614155b15610241576101ec610531565b6040517f295a81c100000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff909116600482015233602482015260440160405180910390fd5b610249610635565b60028190556040519081527febf28bfb587e28dfffd9173cf71c32ba5d3f0544a0117b5539c9b274a5bba2a89060200160405180910390a1565b6000803660405161029592919061083b565b604051809103902090506102a7610531565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161480156102ed5750600081815260036020526040902054155b156103535760025460000361030557610305816106c9565b6000818152600360205260408082204290555182917f87a332a414acbc7da074543639ce7ae02ff1ea72e88379da9f261b080beb5a13916103489190369061084b565b60405180910390a250565b61035b6105c5565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161480156103a2575060008181526003602052604090205415155b156103ea576000818152600360205260408082208290555182917fbede6852c1d97d93ff557f676de76670cd0dec861e7fe8beb13aa0ba2b0ab040916103489190369061084b565b6000818152600360205260408120549003610407576101ec610531565b600254600082815260036020526040902054429161042491610898565b101561045c576040517f43dc986d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600081815260036020526040812055610474816106c9565b50565b60003361048b57610486610635565b905090565b610493610156565b90565b60003361048b575060015473ffffffffffffffffffffffffffffffffffffffff1690565b60003361048b57610486610531565b60003361048b575060025490565b6000336104f1575060009081526003602052604090205490565b6104f9610156565b919050565b60003361048b575060005473ffffffffffffffffffffffffffffffffffffffff1690565b60003361048b576104866105c5565b600154604080517f5c39fcc1000000000000000000000000000000000000000000000000000000008152905160009273ffffffffffffffffffffffffffffffffffffffff1691635c39fcc19160048083019260209291908290030181865afa1580156105a1573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061048691906108d7565b600154604080517fd8bff440000000000000000000000000000000000000000000000000000000008152905160009273ffffffffffffffffffffffffffffffffffffffff169163d8bff4409160048083019260209291908290030181865afa1580156105a1573d6000803e3d6000fd5b600154604080517f6a42b8f8000000000000000000000000000000000000000000000000000000008152905160009273ffffffffffffffffffffffffffffffffffffffff1691636a42b8f89160048083019260209291908290030181865afa1580156106a5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104869190610914565b807f4c109d85bcd0bb5c735b4be850953d652afe4cd9aa2e0b1426a65a4dcb2e12296000366040516106fc92919061084b565b60405180910390a260008061072660005473ffffffffffffffffffffffffffffffffffffffff1690565b73ffffffffffffffffffffffffffffffffffffffff1660003660405161074d92919061083b565b6000604051808303816000865af19150503d806000811461078a576040519150601f19603f3d011682016040523d82523d6000602084013e61078f565b606091505b5090925090508115156001036107a757805160208201f35b805160208201fd5b600060208083528351808285015260005b818110156107dc578581018301518582016040015282016107c0565b818111156107ee576000604083870101525b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016929092016040019392505050565b60006020828403121561083457600080fd5b5035919050565b8183823760009101908152919050565b60208152816020820152818360408301376000818301604090810191909152601f9092017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0160101919050565b600082198211156108d2577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b500190565b6000602082840312156108e957600080fd5b815173ffffffffffffffffffffffffffffffffffffffff8116811461090d57600080fd5b9392505050565b60006020828403121561092657600080fd5b505191905056fea164736f6c634300080f000a"

func init() {
	if err := json.Unmarshal([]byte(DelayedVetoableStorageLayoutJSON), DelayedVetoableStorageLayout); err != nil {
		panic(err)
	}

	layouts["DelayedVetoable"] = DelayedVetoableStorageLayout
	deployedBytecodes["DelayedVetoable"] = DelayedVetoableDeployedBin
}
